name: Docker Image Builder

on:
  workflow_call:
    inputs:
      platform:
        description: 'The platform to build the image for'
        required: true
        type: string
      path:
        description: 'The path to the build context'
        required: false
        default: .
        type: string
      file:
        description: 'The path to the Dockerfile'
        required: false
        default: ./Dockerfile
        type: string
      build-args:
        description: 'Build args to be passed to Docker build'
        required: false
        default: ''
        type: string
      images:
        description: 'The images to pass to the Docker metadata action'
        required: true
        type: string
      tags:
        description: 'The tags to pass to the Docker metadata action'
        required: true
        type: string
      flavor:
        description: 'The flavor to pass to the Docker metadata action'
        required: false
        default: ''
        type: string
    outputs:
      tag: 
        description: 'The first tag generated by Docker for this build'
        value: ${{ jobs.build-image.outputs.tag }}
    secrets:
      DOCKERHUB_TOKEN:
        description: 'The token used to access Docker hub'
        required: false
    
jobs:
  build-image:
    name: Build Docker image in ${{ inputs.path }} for ${{ inputs.platform }}
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v4
    - name: Docker meta
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ inputs.images }}
        tags: ${{ inputs.tags }}
        flavor: ${{ inputs.flavor }}
    - name: Get first tag 
      id: first-tag
      run: |
        echo -e ${{ toJson(steps.meta.outputs.tags) }} | { mapfile -t; echo "tag=${MAPFILE[0]}" >> $GITHUB_OUTPUT; echo "First tag: ${MAPFILE[0]}"; }
    - name: Login to Docker Hub
      uses: docker/login-action@v3
      if: secrets.DOCKERHUB_TOKEN != ''
      with:
        username: ${{ vars.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Login to GHCR
      uses: docker/login-action@v3
      if: contains( inputs.images', 'ghcr.io' )
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      with:
        config-inline: |
          [worker.oci]
            max-parallelism = 2
    - name: Build and push
      uses: docker/build-push-action@v5
      with:
        build-args: ${{ inputs.build-args }}
        file: ${{ inputs.file }}
        context: ${{ inputs.path }}
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        platforms: ${{ inputs.platform }}
    outputs:
      tag: ${{ steps.first-tag.outputs.tag }}
